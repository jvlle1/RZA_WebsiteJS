@page "/Sign"
@using RZA_WebsiteJS.Models
@using RZA_WebsiteJS.Utilities
@using RZA_WebsiteJS.Services

@inject CustomerService CustomerService
@inject NavigationManager NavigationManager
@inject UserSession UserSession

@rendermode InteractiveServer

<PageTitle>Sign-in</PageTitle>

<link rel="stylesheet" a href="/css/styles.css" />

<div class="sign-container">

    <div class="sign-card">
        <div class="image-side">
            <img src="/images/log-in image.jpg" id="mem" width="300" />
        </div>
    

        <div class="form-side">
            <EditForm Model="newCustomer" OnValidSubmit="HandleValidSubmit" FormName="LoginForm">
                <DataAnnotationsValidator />
                <ValidationSummary />
                
                <h2>Sign-in</h2>

                <div class="input-box">
                    <InputText @bind-Value="newCustomer.Username" type="username" class="input-field" placeholder="Username" autocomplete="off" required />
                </div>

                <div class="input-box">
                    <InputText @bind-Value=@passsword type="password" class="input-field" placeholder="Password" required />
                </div>

                <div class="options">
                    <section>
                        <input type="checkbox" id="check" />
                        <label for="check">Remember me</label>
                    </section>
                    <section>
                        <a href="/Modifyacc">Forgot password?</a>
                    </section>
                </div>

                <div>
                    <label style="color: red">@message</label>
                </div>
                <button type="submit" class="submit-btn">Sign In</button>
                
            </EditForm>

            <div class="sign-up-link">
                <p>Dont Have An Account? <a href="/Sign-up">Sign Up Now</a></p>
            </div>
        </div>
    </div>

</div>



@code {
    private Customer newCustomer = new Customer();
    private string passsword;
    private string message;

    protected override async Task OnInitializedAsync()
    {
        if (UserSession.UserId != 0)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task HandleValidSubmit()
    {
        newCustomer.Passsword = PasswordUtils.HashPassword(passsword);
        newCustomer = await CustomerService.LogIn(newCustomer);
        if (newCustomer == null)
        {
            Console.WriteLine("Could not log in");
           
        }
        else
        {
            UserSession.UserId = newCustomer.CustomerId;
            message = "LOGGED IN";

            StateHasChanged(); // Refresh the UI to display the message immediately.
            await Task.Delay(2000); 



            NavigationManager.NavigateTo("/"); /* will lead to account page soon */
        }
    }

}

