@using RZA_WebsiteJS.Services
@using RZA_WebsiteJS.Models
@inject CustomerService CustomerService

@using RZA_WebsiteJS.Utilities
@inject NavigationManager NavigationManager
@inject UserSession UserSession

@rendermode InteractiveServer

<link rel="stylesheet" href="css/styles.css" />

@page "/Sign-up"

<div class="sign-container">
    <div class="sign-card">
        <div class="image-side">
            <img src="/images/log-in image.jpg" id="mem" height="340" width="300" />
        </div>

        <div class="form-side">
            <EditForm Model="newCustomer" OnValidSubmit="HandleValidSubmit" FormName="testForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <h2>Sign-Up</h2>

                <div class="names">
                    <div class="input-box">
                        <InputText @bind-Value="newCustomer.FirstName" type="text" class="input-field" placeholder="First Name" autocomplete="off" required />
                    </div>

                    <div class="input-box">
                        <InputText @bind-Value="newCustomer.LastName" type="text" class="input-field" placeholder="Last Name" autocomplete="off" required />
                    </div>
                </div>
            

                <div class="input-box">
                    <InputText @bind-Value="newCustomer.Email" type="text" class="input-field" placeholder="Email" autocomplete="off" required />
                </div>

                <div class="input-box">
                    <InputText @bind-Value="newCustomer.Username" type="text" class="input-field" placeholder="Username" autocomplete="off" required />
                </div>

                <div class="input-box">
                    <InputText @bind-Value="newCustomer.Passsword" type="password" class="input-field" placeholder="Password" autocomplete="off" required />
                </div>

                <div>
                    <label style="color: green">@message</label>
                </div>
                <button type="submit" class="submit-btn">Sign Up</button>
        </EditForm>
        </div>
    </div>

</div>


@code {
    private Customer newCustomer = new Customer();
    private string passsword;
    private string message;



    private async Task HandleValidSubmit()
    {

        newCustomer.Passsword = PasswordUtils.HashPassword(newCustomer.Passsword);

        // insert new user to database
        await CustomerService.AddCustomerAsync(newCustomer);
        message = "You have successfully registered";
        
        // clears out the form 
        newCustomer = new Customer();
        passsword = "";
        NavigationManager.NavigateTo("/");

    }
}